<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Home Page</title>
<link rel="stylesheet" href="homepagedesign.css" />
<link rel="stylesheet" href="login window.css" />
<link rel="stylesheet" href="table.css">
<link href='https://fonts.googleapis.com/css?family=Alex Brush' rel='stylesheet'>
<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Assistant:wght@600&display=swap" rel="stylesheet">
<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Exo:ital,wght@1,500&display=swap" rel="stylesheet">
</head>
<body>

<div class="headWelcome" >
    <div class="topHead" style="background: linear-gradient(to bottom, #4caf50 0%, #80bd5f 100%); height: 90px;"></div>
    <div class="downHead" style="background-color: white; height: 90px; box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);"></div>
    <img src="logoShape.png" style="position:relative;left:700px;top:-180px;width: 330px;height: 180px;" alt="shape">
    <h1 style="position:relative;top:-300px;color: white; left:785px;font-family: 'Exo', sans-serif;">Auto shop</h1>
</div>

<div class="menuHead" style="position: relative;height: 100px; left:550px; width: 700px; top:-260px;">
<button class="menuButton" style="position: relative; " onclick="movProdPage()">מה חדש</button>
<label class="control-label" style="font-size: 16px;color: gray;">|</label>
<button class="menuButton" style="position: relative; " onclick="movConnectPage()">צרו קשר</button>
<label class="control-label" style="font-size: 16px;color: gray;">|</label>
<button class="menuButton" style="position: relative; " onclick="movAboutPage()">אודות</button>
<label class="control-label" style="font-size: 16px;color: gray;">|</label>
<button class="menuButton" style="position: relative; " onclick="moveBuyPage()">רכישת סל</button>
<label class="control-label" style="font-size: 16px;color: gray;">|</label>
<button class="menuButton" style="position: relative; " onclick="moveHomePage()">דף הבית</button>
</div>

    <table id="myTable"class="ruleToRemove" style="left: 550px; top:-285px;font-family: Assistant;
  text-align: center;position: relative;border-collapse: collapse;margin: 0px 0px;font-size: 20px;min-width: 240px;border-radius: 30px 30px 0px 0px;overflow: hidden;box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);border-collapse: collapse; ">
        <tbody>
            <tr>
                <td>דוב</td>
                <td>כישורית</td>
                <td>סולטן</td>
            </tr>
            <tr>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        </tbody>
    </table>

<div class="table-wrapper-scroll-y my-custom-scrollbar" style="position: relative;left:-730px; top:-285px; height: 500px;">
    <table class="table table-bordered table-striped mb-0">
<div class="centered">
<div class="content-table" style="position: relative; left:880px;" data-url="/basicNames"></div>
</div>
    </table>
  </div>

<button class="submit_list" style="top:829px;left:557px;border-bottom-left-radius: 50px;border-bottom-right-radius: 50px;">
    <div class="popup" style="width: 537px;"onclick="movesubmitLst()">סיימתי
  <span class="popuptext" id="myPopup">לא הכנסת פריטים לרשימת הקניות</span>
</div></button></div>

<div class="w3-content w3-section" style="position:relative;top:-885px;left:1450px;max-width:443px; max-height: 300px;">
  <img class="mySlides" src="1.jpg" style="width:100%;border-bottom-right-radius:30px;">
  <img class="mySlides" src="2.jpg" style="width:100%;border-bottom-right-radius:30px;">
  <img class="mySlides" src="3.jpg" style="width:100%;border-bottom-right-radius:30px;">
  <img class="mySlides" src="4.jpg" style="width:100%;border-bottom-right-radius:30px;">
</div>
</body>
<script>


    class Veg{
  constructor(basicName, quantity) {
    this.basicName = basicName;
    this.quantity = quantity;
  }
}

class Prod{
    constructor(basicName,realName, quantity, link=null,cost=null) {
    this.basicName = basicName;
    this.quantity = quantity;
    this.realName=realName;
    this.link = link;
    this.cost=cost;
  }
}

class ProdTable{
        constructor(basicName) {
            this.basicName=basicName;
            this.products=[];
        }
}

class  Cart {
        constructor(userId){
            this.userId = userId
            this.products = []
            this.prodsKishurit=[]
            this.missKishurit=[]
            this.prodsSultan=[]
            this.missSultan=[]
            this.prodsDov=[]
            this.missDov=[]
        }

        //while add quantity to the shopping cart, update it
        addProduct(name, q) {
            var foundIndex = this.findProduct(name);
            if(foundIndex === -1) {
                var newProduct= new Veg(name, q)
                this.products.push(newProduct)
                return
            }
            else {
                this.products[foundIndex].quantity = q
            }
        }

        //this function add product to supplier list
        addSupplierLst(nameProd, nameSupplier, q, realName,link=null,cost) {
            if(nameSupplier==="Kishurit") {
                var foundIndex = this.findProdInSupplierLst(nameProd,nameSupplier);
                if(foundIndex === -1) {
                    var newProduct= new Veg(nameProd, q)
                    var newProd=new Prod(nameProd,realName,q,null,cost)
                    this.prodsKishurit.push(newProd)
                    return
                }
                else {
                    this.prodsKishurit[foundIndex].quantity = q
                }
            }

            else if(nameSupplier==="Sultan") {
                var foundIndex = this.findProdInSupplierLst(nameProd,nameSupplier);
                if(foundIndex === -1) {
                    var newProduct= new Veg(nameProd, q)
                    var newProd=new Prod(nameProd,realName,q,null,cost)
                    this.prodsSultan.push(newProd)
                    return
                }
                else {
                    this.prodsSultan[foundIndex].quantity = q
                }
            }
            else if(nameSupplier==="Dov") {
                    var foundIndex = this.findProdInSupplierLst(nameProd,nameSupplier);
                    if(foundIndex === -1) {
                        var newProduct= new Veg(nameProd, q)
                        var newProd=new Prod(nameProd,realName,q,link,cost)
                        this.prodsDov.push(newProd)
                        return
                    }
                    else {
                        this.prodsDov[foundIndex].quantity = q
                    }
            }
        }

        addMissSupplierLst(nameProd, nameSupplier,q) {
            if(nameSupplier==="Kishurit") {
                var foundIndex = this.findProdInMissSupplierLst(nameProd,nameSupplier);
                    if(foundIndex === -1) {
                        var newProduct= new Veg(nameProd, q)
                        this.missKishurit.push(newProduct)
                        return
                    }
                    else {
                        return
                    }
            }
            else if(nameSupplier==="Sultan") {
                    var foundIndex = this.findProdInMissSupplierLst(nameProd,nameSupplier);
                    if(foundIndex === -1) {
                        var newProduct= new Veg(nameProd, q)
                        this.missSultan.push(newProduct)
                        return
                    }
                    else {
                        return
                    }
            }
            else if(nameSupplier==="Dov") {
                    var foundIndex = this.findProdInMissSupplierLst(nameProd,nameSupplier);
                    if(foundIndex === -1) {
                        var newProduct= new Veg(nameProd, q)
                        this.missDov.push(newProduct)
                        return
                    }
                    else {
                        return
                    }
                }
            }

        subtractSupplierLst(nameProd, nameSupplier, q) {
            if(nameSupplier==="Kishurit") {
                var foundIndex = this.findProdInSupplierLst(nameProd,nameSupplier);
                if(foundIndex === -1)
                    return
                else {
                    if(q === 0)
                        this.prodsKishurit.splice(foundIndex, 1);
                    else
                        this.prodsKishurit[foundIndex].quantity = q;
                }
            }
            else if(nameSupplier==="Sultan") {
                    var foundIndex = this.findProdInSupplierLst(nameProd,nameSupplier);
                    if(foundIndex === -1)
                        return
                    else {
                        if(q === 0)
                            this.prodsSultan.splice(foundIndex, 1);
                        else
                            this.prodsSultan[foundIndex].quantity = q;
                    }
            }
            else if(nameSupplier==="Dov") {
                    var foundIndex = this.findProdInSupplierLst(nameProd,nameSupplier);
                    if(foundIndex === -1)
                        return
                    else {
                        if(q === 0)
                            this.prodsDov.splice(foundIndex, 1);
                        else
                            this.prodsDov[foundIndex].quantity = q;
                    }
                }
            }

        subtractProduct(name,q) {
            var foundIndex = this.findProduct(name);
            if(foundIndex === -1)
                return
            else {
                if(q === 0)
                    this.products.splice(foundIndex, 1);
                else
                    this.products[foundIndex].quantity = q;
            }
        }

        findProdInSupplierLst(nameProd,nameSupplier) {
            if(nameSupplier==="Kishurit") {
                let i=0;
                for(let val of this.prodsKishurit)
                {
                    if(val.basicName===nameProd)
                        return i;
                    else
                        i++;
                }
                return -1;
            }

            else if(nameSupplier==="Sultan") {
                let i=0;
                for(let val of this.prodsSultan)
                {
                    if(val.basicName===nameProd)
                        return i;
                    else
                        i++;
                }
                return -1;
            }

            else if(nameSupplier==="Dov") {
                let i=0;
                for(let val of this.prodsDov)
                {
                    if(val.basicName===nameProd)
                        return i;
                    else
                        i++;
                }
                return -1;
            }
        }

        findProdInMissSupplierLst(nameProd,nameSupplier) {
            if(nameSupplier==="Kishurit") {
                let i=0;
                for(let val of this.missKishurit)
                {
                    if(val.basicName===nameProd)
                        return i;
                    else
                        i++;
                }
                return -1;
            }
            else if(nameSupplier==="Sultan") {
                let i=0;
                for(let val of this.missSultan)
                {
                    if(val.basicName===nameProd)
                        return i;
                    else
                        i++;
                }
                return -1;
            }
            else if(nameSupplier==="Dov") {
                let i=0;
                for(let val of this.missDov)
                {
                    if(val.basicName===nameProd)
                        return i;
                    else
                        i++;
                }
                return -1;
            }
        }

        findProduct(name) {
            let i=0;
            for(let val of this.products)
            {
                if(val.basicName===name)
                    return i;
                else
                    i++;
            }
            return -1;
        }
}

//move button functions
function moveProdPage() {
  location.href = '/Products2';
}
function moveHomePage() {
  location.href = "/new";
}

function moveBuyPage() {
  location.href = "/buy";
}

function movAboutPage() {
    location.href = "/About";
}

function movConnectPage() {
    location.href = "/Connect";
}

function movWhatsNewPage() {
    location.href = "/WhatsNew";
}

function movesubmitLst() {
    console.log(shoppingCart);
    if(shoppingCart.products.length===0) {
        var popup = document.getElementById("myPopup");
        popup.classList.toggle("show");
    }
    else {
        window.localStorage.setItem('Shopping cart list', JSON.stringify(shoppingCart));
        window.localStorage.setItem('sum sultan', JSON.stringify(costSultan));
        window.localStorage.setItem('sum kishurit', JSON.stringify(costKishurit));
        window.localStorage.setItem('sum dov', JSON.stringify(costDov));
        location.href = '/totalSum';
    }
}

    //take the veg names from basic veg table and their costs from the different suppliers
    async function updateTable(root){
        const table = root.querySelector(".content-table");
        const response = await fetch('/basicNames');//await fetch("/data");
        const headers = ['שם מוצר','כמות','סולטן','כישורית','דוב'];
        const basicNames = await response.json();

        const response2= await fetch('/basicNamesCost');
        const allProds=await response2.json();

        // Clear Table
        table.querySelector("thead tr").innerHTML = '';
        table.querySelector("tbody").innerHTML = '';
         table.querySelector('thead tr').insertAdjacentHTML('afterbegin', `<th style="display:none;">dov Link</th>`);
        table.querySelector('thead tr').insertAdjacentHTML('afterbegin', `<th style="display:none;">dov Real</th>`);
        table.querySelector('thead tr').insertAdjacentHTML('afterbegin', `<th style="display:none;">kishurit Real</th>`);
        table.querySelector('thead tr').insertAdjacentHTML('afterbegin', `<th style="display:none;">sultan Real</th>`);
        for (const header of headers){
            table.querySelector('thead tr').insertAdjacentHTML('afterbegin', `<th>${ header }</th>`);
        }

        var kishurit_price='-';
        var kishurit_realName='-';
        var sultan_realName='-';
        var sultan_price='-';
        var dov_realName='-';
        var dov_price='-';
        var dov_prod_link = '-';
        var sultan_prod_name='-';
        var kishurit_prod_name='-';
        var dov_prod_name='-';

        for (const base of basicNames) {
            sultan_price = '-';
            sultan_prod_name='-';
            kishurit_prod_name='-';
            dov_prod_name='-';
            kishurit_price = '-';
            dov_price = '-';
            dov_price = '-';
            kishurit_realName = '-';
            dov_realName = '-';

            for (const r of allProds) {
                if (r.Base_Prod === base.Base_Prod) {
                    if (r.Prod_Web === 'Sultan') {
                        sultan_price = r.Prod_Price;
                        sultan_realName = r.Prod_Id_Web;
                        sultan_prod_name=r.Prod_Name;
                    }
                    if (r.Prod_Web === 'Kishurit') {
                        kishurit_price = r.Prod_Price;
                        kishurit_realName = r.Prod_Id_Web;
                        kishurit_prod_name=r.Prod_Name;
                    }
                    if (r.Prod_Web === 'Dov') {
                        dov_price = r.Prod_Price;
                        dov_realName = r.Prod_Id_Web;
                        dov_prod_link = r.Prod_Id_Web_Link;
                        dov_prod_name=r.Prod_Name;
                    }
                }
                //console.log("real name:"+sultan_realName);
            }
            //check if there is any quantity of the product. if not- dont allow the client to increase or decrease
            //quantity from the specific prod
            if (sultan_price === '-' && kishurit_price === '-' && dov_price === '-') {
                continue;

            } else {
                table.querySelector('tbody').insertAdjacentHTML('beforebegin', `
                <tr>
                <td style="display:none;">
                    ${dov_prod_link}

                </td>
                <td style="display:none;">
                    ${dov_realName}
                </td>
                <td style="display:none;">
                    ${kishurit_realName}
                </td>
                <td style="display:none;">
                    ${sultan_realName}
                </td>
                <td>
                    <div class="myDIV">${dov_price}</div>
                    <div class="hide">${dov_prod_name}</div>
                </td>
                <td>
                    <div class="myDIV">${kishurit_price}</div>
                    <div class="hide">${kishurit_prod_name}</div>
                </td>

                <td>
                 <div class="myDIV">${sultan_price}</div>
                 <div class="hide">${sultan_prod_name}</div>
                </td>
                <td>
                    <div class="counter" data-name=${base.Base_Prod} sultan_real_name=${sultan_realName} kishurit_real_name=${kishurit_realName}  dov_real_name=${dov_realName}  cost-sultan=${sultan_price}  cost-kishurit=${kishurit_price}  cost-dov=${dov_price} dov-prod-link=${dov_prod_link}>
                    <span class="down" onclick="decreaseCount(event)" >-</span>
                    <input type="text" value="0">
                    <span class="up" onclick="increaseCount(event)">+</span>
                    </div>
                </td>
                <td>
                   ${base.Base_Prod}
                </td>
                </tr>
                `);
            }
        }
    }


    let shoppingCart =new Cart(0);
    var costSultan=0.0;
    var costDov=0.0;
    var costKishurit=0.0;
    var tbl=document.getElementById("myTable");
    tbl.classList.add('myTable')

    //init tables
    tbl.innerHTML = `<tbody>
            <tr>
                <td>דוב</td>
                <td>כישורית</td>
                <td>סולטן</td>
            </tr>
            <tr>
                <td>${costDov}</td>
                <td>${costKishurit}</td>
                <td>${costSultan}</td>
            </tr>
        </tbody>`;

    for (const root of document.querySelectorAll('.content-table[data-url]')){
        const table = document.createElement('table');
        table.classList.add('content-table')
        table.innerHTML = `

            <thead>
                <tr></tr>
            </thead>

            <tbody>
                <tr>
                    <td>Loading</td>
                </tr>
            </tbody>
        `;
         root.append(table);
         updateTable(root);
    }

    //Allow the slide show in the right page
    var myIndex = 0;
    carousel();

    function carousel() {
      var i;
      var x = document.getElementsByClassName("mySlides");
      for (i = 0; i < x.length; i++) {
        x[i].style.display = "none";
      }
      myIndex++;
      if (myIndex > x.length) {myIndex = 1}
      x[myIndex-1].style.display = "block";
      setTimeout(carousel, 2000); // Change image every 2 seconds
    }

    //for the quantity increaseCount
    function increaseCount(event) {
        var input = event.target.previousElementSibling;
        var currentVege = event.target.parentElement.getAttribute('data-name')
        var value = parseInt(input.value, 10);
        value = isNaN(value) ? 0 : value;
        value++;
        input.value = value;
        shoppingCart.addProduct(currentVege,value);

        var costS=event.target.parentElement.getAttribute('cost-sultan');
        var realNameS=event.target.parentElement.getAttribute('sultan_real_name');
        if(costS!='-') {
            costSultan += parseFloat(costS);
            console.log("sultan:"+costS+" realName:"+realNameS+" basic:"+currentVege);
            shoppingCart.addSupplierLst(currentVege,"Sultan",value,realNameS,null,costS);
        }
        else
            shoppingCart.addMissSupplierLst(currentVege,"Sultan",value);

        var costD=event.target.parentElement.getAttribute('cost-Dov');
        var realNameD=event.target.parentElement.getAttribute('Dov_real_name');
        var prodLinkD = event.target.parentElement.getAttribute('dov-prod-link');
        if(costD!='-') {
            costDov += parseFloat(costD);
            costDov=Math.round(costDov * 100) / 100
            shoppingCart.addSupplierLst(currentVege,"Dov",value,realNameD,prodLinkD,costD);
        }
        else
            shoppingCart.addMissSupplierLst(currentVege,"Dov",value);

        var costK=event.target.parentElement.getAttribute('cost-kishurit');
        var realNameK=event.target.parentElement.getAttribute('kishurit_real_name');
        if(costK!='-') {
            costKishurit += parseFloat(costK);
            shoppingCart.addSupplierLst(currentVege,"Kishurit",value,realNameK,null,costK);
        }
        else
            shoppingCart.addMissSupplierLst(currentVege,"Kishurit",value);

        tbl.innerHTML = `<tbody>
            <tr>
                <td>דוב</td>
                <td>כישורית</td>
                <td>סולטן</td>
            </tr>
            <tr>
                <td>${costDov}</td>
                <td>${costKishurit}</td>
                <td>${costSultan}</td>
            </tr>
        </tbody>`;
    }

    //for the quantity decreaseCount
    function decreaseCount(event) {
      var input = event.target.nextElementSibling;
      var currentVege = event.target.parentElement.getAttribute('data-name')
      var value = parseInt(input.value, 10);
      if (value > 0) {
        value = isNaN(value) ? 0 : value;
        value--;
        input.value = value;

        shoppingCart.subtractProduct(currentVege,value);
          var costS=event.target.parentElement.getAttribute('cost-sultan');
            if(costS!='-') {
                costSultan -= parseFloat(costS);
                shoppingCart.subtractSupplierLst(currentVege,"Sultan",value);
            }
            if(costSultan<0) costSultan=0;

            var costD=event.target.parentElement.getAttribute('cost-dov');
            if(costD!='-') {
                costDov -= parseFloat(costD);
                costDov=Math.round(costDov * 100) / 100
                shoppingCart.subtractSupplierLst(currentVege,"Dov",value);
            }
            if(costDov<0) costDov=0;

            var costK=event.target.parentElement.getAttribute('cost-kishurit');
            if(costK!='-') {
                costKishurit -= parseFloat(costK);
                shoppingCart.subtractSupplierLst(currentVege,"Kishurit",value);
            }
            if(costKishurit<0)costKishurit=0;


            tbl.innerHTML = `<tbody>
                <tr>
                    <td>דוב</td>
                    <td>כישורית</td>
                    <td>סולטן</td>
                </tr>
                <tr>
                    <td>${costDov}</td>
                    <td>${costKishurit}</td>
                    <td>${costSultan}</td>
                </tr>
            </tbody>`;
        }
      //console.log("**sultan there:"+shoppingCart.prodsSultan+" *michaeli there:"+shoppingCart.prodsMichaeli+" **kishurit there:"+shoppingCart.prodsKishurit)
    }

</script>
</html>